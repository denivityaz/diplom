{"ast":null,"code":"var _jsxFileName = \"C:\\\\Diplom\\\\frontend\\\\src\\\\components\\\\auth\\\\registration.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegistrationForm = props => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const navigate = useNavigate();\n  const onButtonClick = () => {\n    // Set initial error values to empty\n    setEmailError('');\n    setPasswordError('');\n\n    // Check if the user has entered both fields correctly\n    if ('' === email) {\n      setEmailError('Введите почту');\n      return;\n    }\n    if (!/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(email)) {\n      setEmailError('Ошибка, введите правильный адрес почты');\n      return;\n    }\n    if ('' === password) {\n      setPasswordError('Введите пароль');\n      return;\n    }\n    if (password.length < 7) {\n      setPasswordError('Пароль должен быть не меньше 8 символов');\n      return;\n    }\n\n    // Authentication calls will be made here...\n  };\n\n  // const RegistrationForm = () => {\n  //     const [username, setUsername] = useState('');\n  //     const [password, setPassword] = useState('');\n  //     const [email, setEmail] = useState('');\n\n  //     const handleRegister = async (e) => {\n  //         e.preventDefault();\n  //         try {\n  //             const response = await axios.post('http://localhost:8000/register', {\n  //                 username,\n  //                 password,\n  //                 email\n  //             });\n  //             console.log(response.data);\n  //         } catch (error) {\n  //             console.error(error);\n  //         }\n  //     };\n\n  return (\n    /*#__PURE__*/\n    // <form onSubmit={handleRegister}>\n    //     <div>\n    //         <label>Username:</label>\n    //         <input\n    //             type=\"text\"\n    //             value={username}\n    //             onChange={(e) => setUsername(e.target.value)}\n    //         />\n    //     </div>\n    //     <div>\n    //         <label>Email:</label>\n    //         <input\n    //             type=\"email\"\n    //             value={email}\n    //             onChange={(e) => setEmail(e.target.value)}\n    //         />\n    //     </div>\n    //     <div>\n    //         <label>Password:</label>\n    //         <input\n    //             type=\"password\"\n    //             value={password}\n    //             onChange={(e) => setPassword(e.target.value)}\n    //         />\n    //     </div>\n    //     <button type=\"submit\">Register</button>\n    // </form>\n    _jsxDEV(\"div\", {\n      className: 'mainContainer',\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title-1\",\n        children: \"\\u0412\\u0445\\u043E\\u0434\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'inputContainer',\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: email,\n          placeholder: \"\\u043F\\u043E\\u0447\\u0442\\u0430\",\n          onChange: ev => setEmail(ev.target.value),\n          className: 'inputBox'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"errorLabel\",\n          children: emailError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'inputContainer',\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: password,\n          placeholder: \"\\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n          onChange: ev => setPassword(ev.target.value),\n          className: 'inputBox'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"errorLabel\",\n          children: passwordError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'inputContainer',\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: 'login-btn',\n          type: \"button\",\n          onClick: onButtonClick,\n          value: 'Зарегистрироваться'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-login\",\n          children: \"\\u0423\\u0436\\u0435 \\u0435\\u0441\\u0442\\u044C \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(RegistrationForm, \"OEMjGIKf0uyNo1+Wd0uI/AiCj4A=\", false, function () {\n  return [useNavigate];\n});\n_c = RegistrationForm;\nexport default RegistrationForm;\nvar _c;\n$RefreshReg$(_c, \"RegistrationForm\");","map":{"version":3,"names":["React","useState","useNavigate","Link","RegistrationForm","props","email","setEmail","password","setPassword","emailError","setEmailError","passwordError","setPasswordError","navigate","onButtonClick","test","length","ev","target","value"],"sources":["C:/Diplom/frontend/src/components/auth/registration.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { useNavigate, Link} from 'react-router-dom'\r\n\r\nimport \"./style.css\"\r\n\r\nconst RegistrationForm = (props) => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [emailError, setEmailError] = useState('')\r\n  const [passwordError, setPasswordError] = useState('')\r\n\r\n  const navigate = useNavigate()\r\n\r\n  const onButtonClick = () => {\r\n    // Set initial error values to empty\r\n    setEmailError('')\r\n    setPasswordError('')\r\n  \r\n    // Check if the user has entered both fields correctly\r\n    if ('' === email) {\r\n      setEmailError('Введите почту')\r\n      return\r\n    }\r\n  \r\n    if (!/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(email)) {\r\n      setEmailError('Ошибка, введите правильный адрес почты')\r\n      return\r\n    }\r\n  \r\n    if ('' === password) {\r\n      setPasswordError('Введите пароль')\r\n      return\r\n    }\r\n  \r\n    if (password.length < 7) {\r\n      setPasswordError('Пароль должен быть не меньше 8 символов')\r\n      return\r\n    }\r\n  \r\n    // Authentication calls will be made here...\r\n  }\r\n\r\n// const RegistrationForm = () => {\r\n//     const [username, setUsername] = useState('');\r\n//     const [password, setPassword] = useState('');\r\n//     const [email, setEmail] = useState('');\r\n\r\n//     const handleRegister = async (e) => {\r\n//         e.preventDefault();\r\n//         try {\r\n//             const response = await axios.post('http://localhost:8000/register', {\r\n//                 username,\r\n//                 password,\r\n//                 email\r\n//             });\r\n//             console.log(response.data);\r\n//         } catch (error) {\r\n//             console.error(error);\r\n//         }\r\n//     };\r\n\r\n    return (\r\n        // <form onSubmit={handleRegister}>\r\n        //     <div>\r\n        //         <label>Username:</label>\r\n        //         <input\r\n        //             type=\"text\"\r\n        //             value={username}\r\n        //             onChange={(e) => setUsername(e.target.value)}\r\n        //         />\r\n        //     </div>\r\n        //     <div>\r\n        //         <label>Email:</label>\r\n        //         <input\r\n        //             type=\"email\"\r\n        //             value={email}\r\n        //             onChange={(e) => setEmail(e.target.value)}\r\n        //         />\r\n        //     </div>\r\n        //     <div>\r\n        //         <label>Password:</label>\r\n        //         <input\r\n        //             type=\"password\"\r\n        //             value={password}\r\n        //             onChange={(e) => setPassword(e.target.value)}\r\n        //         />\r\n        //     </div>\r\n        //     <button type=\"submit\">Register</button>\r\n        // </form>\r\n        <div className={'mainContainer'}>\r\n        <h1 className=\"title-1\">Вход</h1>\r\n      <div className={'inputContainer'}>\r\n        <input\r\n          value={email}\r\n          placeholder=\"почта\"\r\n          onChange={(ev) => setEmail(ev.target.value)}\r\n          className={'inputBox'}\r\n        />\r\n        <label className=\"errorLabel\">{emailError}</label>\r\n      </div>\r\n      <br />\r\n      <div className={'inputContainer'}>\r\n        <input\r\n          value={password}\r\n          placeholder=\"пароль\"\r\n          onChange={(ev) => setPassword(ev.target.value)}\r\n          className={'inputBox'}\r\n        />\r\n        <label className=\"errorLabel\">{passwordError}</label>\r\n      </div>\r\n      <br />\r\n      <div className={'inputContainer'}>\r\n        <input className={'login-btn'} type=\"button\" onClick={onButtonClick} value={'Зарегистрироваться'} />\r\n      </div>\r\n        \r\n        <Link to=\"/login\">\r\n            <button className='btn-login'>\r\n                Уже есть аккаунт?\r\n            </button>\r\n        </Link>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default RegistrationForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}